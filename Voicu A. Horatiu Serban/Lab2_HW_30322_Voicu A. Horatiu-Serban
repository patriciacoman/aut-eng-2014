#include <stdio.h>
#include <stdlib.h>

typedef struct node
{
    int key;
    struct node* prev;
    struct node* next;
} NodeT;

NodeT *first, *last;

void initialize()
{
    first=(NodeT*)malloc(sizeof (NodeT));
    last=(NodeT*)malloc(sizeof (NodeT));
    first->key=1;
    first->next=last;
    first->prev=NULL;
    last->prev=first;
    last->next=NULL;
}

void add(int value,int pos)
{
    int i=0;
    NodeT *newN, *temp, *temp2;
    newN=(NodeT*)malloc(sizeof(NodeT));
    newN->key=value;
    temp2=first;
    temp=first;

    while(temp!=NULL)
    {
        i++;
        temp=temp->next;
    }
    printf("\nnumber of nodes are %d  ",i);

    if(pos==1)
    {
        newN->next=first;
        newN->prev=NULL;
        first->prev=newN;
        first=newN;
    }
    else if(pos==i)
    {
        newN->next=NULL;
        newN->prev=last;
        last->next=newN;
        last=newN;
    }
    else
    {
        int j;
        for (j=0; j<pos-1; j++)
        {
            temp2=temp2->next;
        }
        newN->next=temp2;
        newN->prev=temp2->prev;
        temp->prev->next=newN;
        temp->prev=newN;
    }
}

NodeT *search(int value)
{
    NodeT *temp=first;
    int ok=0;
    while (temp!=NULL)
    {
        if(temp->key==value)
        {
            ok=1;
            break;
        }
        temp=temp->next;
    }
    if (ok==0)
    {
        printf("\nEror 404 NOT FOUND");
    }
    else
    {
        printf("\nThe element %d has been found!",temp->key);
        return temp;
    }
}

void del(int value)
{
    NodeT *temp=search(value);
    if (temp==first)
    {
        first=temp->next;
        first->prev=NULL;
        free(temp);
    }
    else if (temp==last)
    {
        last=temp->prev;
        last->next=NULL;
        free(temp);
    }
    else
    {
        temp->prev->next=temp->next;
        temp->next->prev=temp->prev;
        free(temp);
    }
}

void traversal()
{
    NodeT *temp1=first;
    printf("A->Z  ");
    while (temp1!=NULL)
    {
        printf("%d ", temp1->key);
        temp1=temp1->next;
    }
    printf("\n");
    NodeT *temp2=last;
    printf("Z->A  ");
    while (temp2!=NULL)
    {
        printf("%d ", temp2->key);
        temp2=temp2->prev;
    }
}

void bubbletrouble()
{
    NodeT *temp1=first;
    NodeT *temp2=first->next;
    int aux;
    while(temp1->next!=NULL)
    {
        while(temp2!=NULL)
        {
            if(temp1->key>temp2->key)
            {
                aux=temp1->key;
                temp1->key=temp2->key;
                temp2->key=aux;
            }
            temp2=temp2->next;
        }
        temp1=temp1->next;
        temp2=temp1->next;
    }

}


int main()
{
    initialize();
    first->key=5;
    last->key=2;
    add(4,2);
    traversal();
    search(2);
    del(2);
    printf("\n");
    traversal();
    printf("\n");
    bubbletrouble();
    printf("\n");
    traversal();
    printf("\n");
    return 0;

}
